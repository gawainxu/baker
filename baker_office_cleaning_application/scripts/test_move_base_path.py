#!/usr/bin/env python

import math

import actionlib
import roslib
import rospy
import tf

#move_base_msgs
from geometry_msgs.msg import PoseStamped
from move_base_msgs.msg import *
from scitos_msgs.msg import MoveBasePathAction
from scitos_msgs.msg import MoveBasePathGoal

def simple_move():
	print("Starting move test")
	rospy.init_node('move_node')
	sac = actionlib.SimpleActionClient('move_base_path', MoveBasePathAction )
	goal1 = MoveBasePathGoal()
	goal2 = MoveBasePathGoal()

	poses = [[-1.,-3.5],
			 [-0.99,-3.5],
			 [1.,-3.5],
			 [1.,-3.51],
			 [1.,-5.5],
			 [0.99,-5.5],
			 [-1.,-5.5],
			 [-1.,-5.49]#,
			# [-1.,-3.5],
			# [-1.5,-3.8],
			# [-3.2,0.0],
			# [10.,0.]
		]
	for i in range(0, 17):
		goal_pose = PoseStamped()
		goal_pose.pose.position.x = poses[i%len(poses)][0]
		goal_pose.pose.position.y = poses[i%len(poses)][1]
		angle = 0
		if i!=0:
			angle = math.atan2(goal_pose.pose.position.y-goal2.target_poses[-1].pose.position.y, goal_pose.pose.position.x-goal2.target_poses[-1].pose.position.x)
		quaternion = tf.transformations.quaternion_from_euler(angle, 0., 0., 'rzyx')#1.57)
		goal_pose.pose.orientation.x = quaternion[0]
		goal_pose.pose.orientation.y = quaternion[1]
		goal_pose.pose.orientation.z = quaternion[2]
		goal_pose.pose.orientation.w = quaternion[3]
		#goal_pose.header
		goal2.target_poses.append(goal_pose)
	
	goal2.path_tolerance = 0.1
	goal2.goal_position_tolerance = 0.1
	goal2.goal_angle_tolerance = 0.087


	#set goal
	for i in range(0, 80):
		goal_pose = PoseStamped()
		#goal_pose.header.frame_id = 'map'
		#goal_pose.header.stamp = rospy.Time.now()
		goal_pose.pose.position.x = 0.4*i
		if i>31 and i<42:
			goal_pose.pose.position.x = 12.4
		if i>=42:
			goal_pose.pose.position.x = 12.4 - 0.4*(i-42)
		goal_pose.pose.position.y = 0.6*math.sin(i*0.5)
		#goal_pose.pose.position.x = poses[i%8][0]
		#goal_pose.pose.position.y = poses[i%8][1]
		angle = 0
		if i!=0:
			angle = math.atan2(goal_pose.pose.position.y-goal1.target_poses[-1].pose.position.y, goal_pose.pose.position.x-goal1.target_poses[-1].pose.position.x)
		quaternion = tf.transformations.quaternion_from_euler(angle, 0., 0., 'rzyx')#1.57)
		goal_pose.pose.orientation.x = quaternion[0]
		goal_pose.pose.orientation.y = quaternion[1]
		goal_pose.pose.orientation.z = quaternion[2]
		goal_pose.pose.orientation.w = quaternion[3]
		#goal_pose.header
		goal1.target_poses.append(goal_pose)
		if i==1:
			goal1.target_poses[0].pose.orientation = goal1.target_poses[1].pose.orientation
	goal1.path_tolerance = 0.1
	goal1.goal_position_tolerance = 0.1
	goal1.goal_angle_tolerance = 0.087
	print("Waiting for server")
	sac.wait_for_server()
	print("Sending command")
	sac.send_goal(goal2)		# goal1
	print("Waiting for result")
	sac.wait_for_result()
	print sac.get_result()



def move_path():
	
	poses = [
		[410, 446, 0],
		[412, 446, 0],
		[414, 446, 0],
		[416, 446, 0],
		[418, 446, 0],
		[420, 446, 0],
		[422, 446, 0],
		[424, 446, 0],
		[426, 446, 0],
		[428, 447, 0.463648],
		[430, 447, 0],
		[432, 447, 0],
		[434, 447, 0],
		[436, 447, 0],
		[438, 447, 0],
		[440, 447, 0],
		[442, 447, 0],
		[444, 447, 0],
		[446, 447, 0],
		[448, 447, 0],
		[450, 447, 0],
		[452, 447, 0],
		[454, 447, 0],
		[456, 447, 0],
		[458, 447, 0],
		[460, 447, 0],
		[462, 447, 0],
		[464, 447, 0],
		[466, 447, 0],
		[468, 447, 0],
		[470, 447, 0],
		[472, 447, 0],
		[474, 447, 0],
		[476, 447, 0],
		[478, 447, 0],
		[480, 447, 0],
		[482, 447, 0],
		[484, 447, 0],
		[486, 447, 0],
		[488, 447, 0],
		[490, 447, 0],
		[492, 448, 0.463648],
		[494, 448, 0],
		[496, 448, 0],
		[498, 448, 0],
		[500, 448, 0],
		[502, 448, 0],
		[504, 448, 0],
		[506, 448, 0],
		[508, 448, 0],
		[510, 448, 0],
		[512, 448, 0],
		[514, 448, 0],
		[516, 448, 0],
		[518, 448, 0],
		[520, 448, 0],
		[522, 448, 0],
		[524, 448, 0],
		[526, 448, 0],
		[528, 448, 0],
		[530, 448, 0],
		[532, 448, 0],
		[534, 448, 0],
		[536, 448, 0],
		[538, 448, 0],
		[540, 448, 0],
		[542, 448, 0],
		[544, 448, 0],
		[546, 448, 0],
		[548, 448, 0],
		[550, 448, 0],
		[552, 448, 0],
		[554, 448, 0],
		[556, 449, 0.463648],
		[558, 449, 0],
		[560, 449, 0],
		[562, 449, 0],
		[562, 453, 1.5708],
		[564, 455, 0.785398],
		[566, 457, 0.785398],
		[566, 457, 0],
		[566, 459, 1.5708],
		[568, 461, 0.785398],
		[570, 463, 0.785398],
		[572, 465, 0.785398],
		[572, 465, 0],
		[570, 463, -2.35619],
		[570, 461, -1.5708],
		[568, 459, -2.35619],
		[566, 457, -2.35619],
		[564, 457, 3.14159],
		[562, 457, 3.14159],
		[560, 457, 3.14159],
		[558, 457, 3.14159],
		[556, 457, 3.14159],
		[554, 456, -2.67795],
		[552, 456, 3.14159],
		[550, 456, 3.14159],
		[548, 456, 3.14159],
		[546, 456, 3.14159],
		[544, 456, 3.14159],
		[542, 456, 3.14159],
		[540, 456, 3.14159],
		[538, 456, 3.14159],
		[536, 456, 3.14159],
		[534, 456, 3.14159],
		[532, 456, 3.14159],
		[530, 456, 3.14159],
		[528, 456, 3.14159],
		[526, 456, 3.14159],
		[524, 456, 3.14159],
		[522, 456, 3.14159],
		[520, 456, 3.14159],
		[518, 456, 3.14159],
		[516, 456, 3.14159],
		[514, 456, 3.14159],
		[512, 456, 3.14159],
		[510, 456, 3.14159],
		[508, 456, 3.14159],
		[506, 456, 3.14159],
		[504, 456, 3.14159],
		[502, 456, 3.14159],
		[500, 456, 3.14159],
		[498, 456, 3.14159],
		[496, 456, 3.14159],
		[494, 456, 3.14159],
		[492, 456, 3.14159],
		[490, 455, -2.67795],
		[488, 455, 3.14159],
		[486, 455, 3.14159],
		[484, 455, 3.14159],
		[482, 455, 3.14159],
		[480, 455, 3.14159],
		[478, 455, 3.14159],
		[476, 455, 3.14159],
		[474, 455, 3.14159],
		[472, 455, 3.14159],
		[470, 455, 3.14159],
		[468, 455, 3.14159],
		[466, 455, 3.14159],
		[464, 455, 3.14159],
		[462, 455, 3.14159],
		[460, 455, 3.14159],
		[458, 455, 3.14159],
		[456, 455, 3.14159],
		[454, 455, 3.14159],
		[452, 455, 3.14159],
		[450, 455, 3.14159],
		[448, 455, 3.14159],
		[446, 455, 3.14159],
		[444, 455, 3.14159],
		[442, 455, 3.14159],
		[440, 455, 3.14159],
		[438, 455, 3.14159],
		[436, 455, 3.14159],
		[434, 455, 3.14159],
		[432, 455, 3.14159],
		[430, 455, 3.14159],
		[428, 455, 3.14159],
		[426, 454, -2.67795],
		[424, 454, 3.14159],
		[422, 454, 3.14159],
		[420, 454, 3.14159],
		[418, 454, 3.14159],
		[416, 454, 3.14159],
		[414, 454, 3.14159],
		[412, 454, 3.14159],
		[410, 454, 3.14159],
		[408, 454, 3.14159],
		[408, 456, 1.5708],
		[408, 458, 1.5708],
		[408, 460, 1.5708],
		[408, 462, 1.5708],
		[408, 462, 0],
		[410, 462, 0],
		[412, 462, 0],
		[414, 462, 0],
		[416, 462, 0],
		[418, 462, 0],
		[420, 462, 0],
		[422, 462, 0],
		[424, 462, 0],
		[426, 462, 0],
		[428, 463, 0.463648],
		[430, 463, 0],
		[432, 463, 0],
		[434, 463, 0],
		[436, 463, 0],
		[438, 463, 0],
		[440, 463, 0],
		[442, 463, 0],
		[444, 463, 0],
		[446, 463, 0],
		[448, 463, 0],
		[450, 463, 0],
		[452, 463, 0],
		[454, 463, 0],
		[456, 463, 0],
		[458, 463, 0],
		[460, 463, 0],
		[462, 463, 0],
		[464, 463, 0],
		[466, 463, 0],
		[468, 463, 0],
		[470, 463, 0],
		[472, 463, 0],
		[474, 463, 0],
		[476, 463, 0],
		[478, 463, 0],
		[480, 463, 0],
		[482, 463, 0],
		[484, 463, 0],
		[486, 463, 0],
		[488, 463, 0],
		[490, 463, 0],
		[492, 464, 0.463648],
		[494, 464, 0],
		[496, 464, 0],
		[498, 464, 0],
		[500, 464, 0],
		[502, 464, 0],
		[504, 464, 0],
		[506, 464, 0],
		[508, 464, 0],
		[510, 464, 0],
		[512, 464, 0],
		[514, 464, 0],
		[516, 464, 0],
		[518, 464, 0],
		[520, 464, 0],
		[522, 464, 0],
		[524, 464, 0],
		[526, 464, 0],
		[528, 464, 0],
		[530, 464, 0],
		[532, 464, 0],
		[534, 464, 0],
		[536, 464, 0],
		[538, 464, 0],
		[540, 464, 0],
		[542, 464, 0],
		[544, 464, 0],
		[546, 464, 0],
		[548, 464, 0],
		[550, 464, 0],
		[552, 464, 0],
		[554, 464, 0],
		[556, 465, 0.463648],
		[558, 465, 0],
		[560, 465, 0],
		[562, 465, 0],
		[564, 465, 0],
		[566, 465, 0],
		[568, 465, 0],
		[570, 465, 0],
		[572, 465, 0],
		[574, 467, 0.785398],
		[576, 467, 0],
		[576, 469, 1.5708],
		[574, 471, 2.35619],
		[572, 473, 2.35619],
		[570, 473, 3.14159],
		[568, 473, 3.14159],
		[566, 473, 3.14159],
		[564, 473, 3.14159],
		[562, 473, 3.14159],
		[560, 473, 3.14159],
		[558, 473, 3.14159],
		[556, 473, 3.14159],
		[554, 472, -2.67795],
		[552, 472, 3.14159],
		[550, 472, 3.14159],
		[548, 472, 3.14159],
		[546, 472, 3.14159],
		[544, 472, 3.14159],
		[542, 472, 3.14159],
		[540, 472, 3.14159],
		[538, 472, 3.14159],
		[536, 472, 3.14159],
		[534, 472, 3.14159],
		[532, 472, 3.14159],
		[530, 472, 3.14159],
		[528, 472, 3.14159],
		[526, 472, 3.14159],
		[524, 472, 3.14159],
		[522, 472, 3.14159],
		[520, 472, 3.14159],
		[518, 472, 3.14159],
		[516, 472, 3.14159],
		[514, 472, 3.14159],
		[512, 472, 3.14159],
		[510, 472, 3.14159],
		[508, 472, 3.14159],
		[506, 472, 3.14159],
		[504, 472, 3.14159],
		[502, 472, 3.14159],
		[500, 472, 3.14159],
		[498, 472, 3.14159],
		[496, 472, 3.14159],
		[494, 472, 3.14159],
		[492, 472, 3.14159],
		[490, 471, -2.67795],
		[488, 471, 3.14159],
		[486, 471, 3.14159],
		[484, 471, 3.14159],
		[482, 471, 3.14159],
		[480, 471, 3.14159],
		[478, 471, 3.14159],
		[476, 471, 3.14159],
		[474, 471, 3.14159],
		[472, 471, 3.14159],
		[470, 471, 3.14159],
		[468, 471, 3.14159],
		[466, 471, 3.14159],
		[464, 471, 3.14159],
		[462, 471, 3.14159],
		[460, 471, 3.14159],
		[458, 471, 3.14159],
		[456, 471, 3.14159],
		[454, 471, 3.14159],
		[452, 471, 3.14159],
		[450, 471, 3.14159],
		[448, 471, 3.14159],
		[446, 471, 3.14159],
		[444, 471, 3.14159],
		[442, 471, 3.14159],
		[440, 471, 3.14159],
		[438, 471, 3.14159],
		[436, 471, 3.14159],
		[434, 471, 3.14159],
		[432, 471, 3.14159],
		[430, 471, 3.14159],
		[428, 471, 3.14159],
		[426, 470, -2.67795],
		[424, 470, 3.14159],
		[422, 470, 3.14159],
		[420, 470, 3.14159],
		[418, 470, 3.14159],
		[416, 470, 3.14159],
		[414, 470, 3.14159],
		[412, 470, 3.14159],
		[410, 470, 3.14159],
		[408, 470, 3.14159],
		[408, 472, 1.5708],
		[408, 474, 1.5708],
		[410, 476, 0.785398],
		[412, 478, 0.785398],
		[414, 478, 0],
		[416, 478, 0],
		[418, 478, 0],
		[420, 478, 0],
		[422, 478, 0],
		[424, 476, -0.785398],
		[426, 476, 0],
		[428, 477, 0.463648],
		[430, 477, 0],
		[432, 477, 0],
		[434, 477, 0],
		[436, 479, 0.785398],
		[438, 479, 0],
		[440, 479, 0],
		[442, 479, 0],
		[444, 479, 0],
		[446, 479, 0],
		[448, 479, 0],
		[450, 479, 0],
		[452, 479, 0],
		[454, 479, 0],
		[456, 479, 0],
		[458, 479, 0],
		[460, 479, 0],
		[462, 479, 0],
		[464, 479, 0],
		[466, 479, 0],
		[468, 479, 0],
		[470, 479, 0],
		[472, 479, 0],
		[474, 479, 0],
		[476, 479, 0],
		[478, 479, 0],
		[480, 479, 0],
		[482, 479, 0],
		[484, 479, 0],
		[486, 479, 0],
		[488, 479, 0],
		[490, 479, 0],
		[492, 480, 0.463648],
		[494, 480, 0],
		[496, 480, 0],
		[498, 480, 0],
		[500, 480, 0],
		[502, 480, 0],
		[504, 480, 0],
		[506, 480, 0],
		[508, 480, 0],
		[510, 480, 0],
		[512, 480, 0],
		[514, 480, 0],
		[516, 480, 0],
		[518, 480, 0],
		[520, 480, 0],
		[522, 480, 0],
		[524, 480, 0],
		[526, 480, 0],
		[528, 480, 0],
		[530, 480, 0],
		[532, 480, 0],
		[534, 480, 0],
		[536, 480, 0],
		[538, 480, 0],
		[540, 480, 0],
		[542, 480, 0],
		[544, 480, 0],
		[546, 480, 0],
		[548, 480, 0],
		[550, 480, 0],
		[552, 480, 0],
		[554, 480, 0],
		[556, 481, 0.463648],
		[558, 481, 0],
		[560, 481, 0],
		[562, 481, 0],
		[564, 481, 0],
		[566, 479, -0.785398],
		[568, 477, -0.785398],
		[570, 475, -0.785398],
		[570, 475, 0],
		[524, 442, -2.51929],
		[522, 442, 3.14159],
		[520, 442, 3.14159],
		[518, 442, 3.14159],
		[516, 442, 3.14159],
		[514, 442, 3.14159],
		[512, 442, 3.14159],
		[510, 442, 3.14159],
		[508, 442, 3.14159],
		[506, 442, 3.14159],
		[504, 442, 3.14159],
		[502, 442, 3.14159],
		[500, 442, 3.14159],
		[498, 442, 3.14159],
		[496, 442, 3.14159],
		[494, 442, 3.14159],
		[492, 442, 3.14159],
		[490, 441, -2.67795],
		[488, 441, 3.14159],
		[486, 441, 3.14159],
		[484, 441, 3.14159],
		[482, 441, 3.14159],
		[480, 441, 3.14159],
		[478, 441, 3.14159],
		[476, 441, 3.14159],
		[474, 441, 3.14159],
		[472, 441, 3.14159],
		[470, 441, 3.14159],
		[468, 441, 3.14159],
		[466, 441, 3.14159],
		[464, 441, 3.14159],
		[462, 441, 3.14159],
		[460, 441, 3.14159],
		[458, 441, 3.14159],
		[456, 441, 3.14159],
		[454, 441, 3.14159],
		[452, 441, 3.14159],
		[450, 441, 3.14159],
		[448, 441, 3.14159],
		[446, 441, 3.14159],
		[444, 441, 3.14159],
		[442, 441, 3.14159],
		[440, 441, 3.14159],
		[438, 441, 3.14159],
		[436, 441, 3.14159],
		[434, 441, 3.14159],
		[432, 441, 3.14159],
		[430, 441, 3.14159],
		[428, 441, 3.14159],
		[426, 440, -2.67795],
		[424, 440, 3.14159],
		[422, 440, 3.14159],
		[420, 440, 3.14159],
		[418, 440, 3.14159],
		[416, 440, 3.14159],
		[414, 440, 3.14159],
		[412, 440, 3.14159],
		[410, 440, 3.14159],
		[410, 440, 0],
		[410, 438, -1.5708],
		[410, 436, -1.5708],
		[410, 434, -1.5708],
		[410, 432, -1.5708],
		[410, 432, 0],
		[412, 432, 0],
		[414, 432, 0],
		[416, 432, 0],
		[418, 432, 0],
		[420, 432, 0],
		[422, 432, 0],
		[424, 432, 0],
		[426, 432, 0],
		[428, 433, 0.463648],
		[430, 433, 0],
		[432, 433, 0],
		[434, 433, 0],
		[436, 433, 0],
		[438, 433, 0],
		[440, 433, 0],
		[442, 433, 0],
		[444, 433, 0],
		[446, 433, 0],
		[448, 433, 0],
		[450, 433, 0],
		[452, 433, 0],
		[454, 433, 0],
		[456, 433, 0],
		[458, 433, 0],
		[460, 433, 0],
		[462, 433, 0],
		[464, 433, 0],
		[466, 433, 0],
		[468, 433, 0],
		[470, 433, 0],
		[472, 433, 0],
		[474, 433, 0],
		[476, 433, 0],
		[478, 433, 0],
		[480, 433, 0],
		[482, 433, 0],
		[484, 433, 0],
		[486, 433, 0],
		[488, 433, 0],
		[490, 433, 0],
		[492, 434, 0.463648],
		[494, 434, 0],
		[496, 434, 0],
		[498, 434, 0],
		[500, 434, 0],
		[502, 434, 0],
		[504, 434, 0],
		[506, 434, 0],
		[508, 434, 0],
		[510, 434, 0],
		[512, 434, 0],
		[514, 434, 0],
		[516, 434, 0],
		[518, 434, 0],
		[520, 434, 0],
		[522, 434, 0],
		[524, 434, 0],
		[526, 434, 0],
		[526, 434, 0],
		[526, 432, -1.5708],
		[526, 430, -1.5708],
		[526, 428, -1.5708],
		[526, 426, -1.5708],
		[526, 426, 0],
		[524, 426, 3.14159],
		[522, 426, 3.14159],
		[520, 426, 3.14159],
		[518, 426, 3.14159],
		[516, 426, 3.14159],
		[514, 426, 3.14159],
		[512, 426, 3.14159],
		[510, 426, 3.14159],
		[508, 426, 3.14159],
		[506, 426, 3.14159],
		[504, 426, 3.14159],
		[502, 426, 3.14159],
		[500, 426, 3.14159],
		[498, 426, 3.14159],
		[496, 426, 3.14159],
		[494, 426, 3.14159],
		[492, 426, 3.14159],
		[490, 425, -2.67795],
		[488, 425, 3.14159],
		[486, 425, 3.14159],
		[484, 425, 3.14159],
		[482, 425, 3.14159],
		[480, 425, 3.14159],
		[478, 425, 3.14159],
		[476, 425, 3.14159],
		[474, 425, 3.14159],
		[472, 425, 3.14159],
		[470, 425, 3.14159],
		[468, 425, 3.14159],
		[466, 425, 3.14159],
		[464, 425, 3.14159],
		[462, 425, 3.14159],
		[460, 425, 3.14159],
		[458, 425, 3.14159],
		[456, 425, 3.14159],
		[454, 425, 3.14159],
		[452, 425, 3.14159],
		[450, 425, 3.14159],
		[448, 425, 3.14159],
		[446, 425, 3.14159],
		[444, 425, 3.14159],
		[442, 425, 3.14159],
		[440, 425, 3.14159],
		[438, 425, 3.14159],
		[436, 425, 3.14159],
		[434, 425, 3.14159],
		[432, 425, 3.14159],
		[430, 425, 3.14159],
		[428, 425, 3.14159],
		[426, 424, -2.67795],
		[424, 424, 3.14159],
		[422, 428, 2.03444],
		[420, 428, 3.14159],
		[418, 428, 3.14159],
		[416, 428, 3.14159],
		[414, 428, 3.14159],
		[412, 428, 3.14159],
		[410, 428, 3.14159],
		[410, 428, 0],
		[412, 428, 0],
		[414, 428, 0],
		[416, 428, 0],
		[418, 428, 0],
		[420, 428, 0],
		[422, 428, 0],
		[424, 426, -0.785398],
		[424, 424, -1.5708],
		[424, 422, -1.5708],
		[425, 420, -1.10715],
		[425, 418, -1.5708],
		[425, 416, -1.5708],
		[425, 416, 0],
		[427, 416, 0],
		[429, 417, 0.463648],
		[431, 417, 0],
		[433, 417, 0],
		[435, 417, 0],
		[437, 417, 0],
		[439, 417, 0],
		[441, 417, 0],
		[443, 417, 0],
		[445, 417, 0],
		[447, 417, 0],
		[449, 417, 0],
		[451, 417, 0],
		[453, 417, 0],
		[455, 417, 0],
		[457, 417, 0],
		[459, 417, 0],
		[461, 417, 0],
		[463, 417, 0],
		[465, 417, 0],
		[467, 417, 0],
		[469, 417, 0],
		[471, 417, 0],
		[473, 417, 0],
		[475, 417, 0],
		[477, 417, 0],
		[479, 417, 0],
		[481, 417, 0],
		[483, 417, 0],
		[485, 417, 0],
		[487, 417, 0],
		[489, 417, 0],
		[491, 417, 0],
		[493, 418, 0.463648],
		[495, 418, 0],
		[497, 418, 0],
		[499, 418, 0],
		[501, 418, 0],
		[503, 418, 0],
		[505, 418, 0],
		[507, 418, 0],
		[509, 418, 0],
		[511, 418, 0],
		[513, 418, 0],
		[515, 418, 0],
		[517, 418, 0],
		[519, 418, 0],
		[521, 418, 0],
		[523, 418, 0],
		[525, 418, 0],
		[527, 418, 0],
		[527, 418, 0],
		[527, 416, -1.5708],
		[527, 414, -1.5708],
		[527, 412, -1.5708],
		[527, 410, -1.5708],
		[527, 410, 0],
		[525, 410, 3.14159],
		[523, 410, 3.14159],
		[521, 410, 3.14159],
		[519, 410, 3.14159],
		[517, 410, 3.14159],
		[515, 410, 3.14159],
		[513, 410, 3.14159],
		[511, 410, 3.14159],
		[509, 410, 3.14159],
		[507, 410, 3.14159],
		[505, 410, 3.14159],
		[503, 410, 3.14159],
		[501, 410, 3.14159],
		[499, 410, 3.14159],
		[497, 410, 3.14159],
		[495, 410, 3.14159],
		[493, 410, 3.14159],
		[491, 409, -2.67795],
		[489, 409, 3.14159],
		[487, 409, 3.14159],
		[485, 409, 3.14159],
		[483, 409, 3.14159],
		[481, 409, 3.14159],
		[479, 409, 3.14159],
		[477, 409, 3.14159],
		[475, 409, 3.14159],
		[473, 409, 3.14159],
		[471, 409, 3.14159],
		[469, 409, 3.14159],
		[467, 409, 3.14159],
		[465, 409, 3.14159],
		[463, 409, 3.14159],
		[461, 409, 3.14159],
		[459, 409, 3.14159],
		[457, 409, 3.14159],
		[455, 409, 3.14159],
		[453, 409, 3.14159],
		[451, 409, 3.14159],
		[449, 409, 3.14159],
		[447, 409, 3.14159],
		[445, 409, 3.14159],
		[443, 409, 3.14159],
		[441, 409, 3.14159],
		[439, 409, 3.14159],
		[437, 409, 3.14159],
		[435, 409, 3.14159],
		[433, 409, 3.14159],
		[431, 409, 3.14159],
		[429, 409, 3.14159],
		[427, 408, -2.67795],
		[425, 408, 3.14159],
		[425, 408, 0],
		[427, 400, -1.32582],
		[429, 401, 0.463648],
		[431, 401, 0],
		[433, 401, 0],
		[435, 401, 0],
		[437, 401, 0],
		[439, 401, 0],
		[441, 401, 0],
		[443, 401, 0],
		[445, 401, 0],
		[447, 401, 0],
		[449, 401, 0],
		[451, 401, 0],
		[453, 401, 0],
		[455, 401, 0],
		[457, 401, 0],
		[459, 401, 0],
		[461, 401, 0],
		[463, 401, 0],
		[465, 401, 0],
		[467, 401, 0],
		[469, 401, 0],
		[471, 401, 0],
		[473, 401, 0],
		[475, 401, 0],
		[477, 401, 0],
		[479, 401, 0],
		[481, 401, 0],
		[483, 401, 0],
		[485, 401, 0],
		[487, 401, 0],
		[489, 401, 0],
		[491, 401, 0],
		[493, 402, 0.463648],
		[495, 402, 0],
		[497, 402, 0],
		[499, 402, 0],
		[501, 402, 0],
		[503, 402, 0],
		[505, 402, 0],
		[507, 402, 0],
		[509, 402, 0],
		[511, 402, 0],
		[513, 402, 0],
		[515, 402, 0],
		[517, 402, 0],
		[519, 402, 0],
		[521, 402, 0],
		[523, 402, 0],
		[525, 402, 0],
		[527, 402, 0],
		[529, 402, 0],
		[531, 402, 0],
		[533, 402, 0],
		[535, 402, 0],
		[537, 402, 0],
		[539, 402, 0],
		[541, 402, 0],
		[543, 402, 0],
		[545, 402, 0],
		[547, 402, 0],
		[549, 402, 0],
		[551, 402, 0],
		[553, 402, 0],
		[555, 402, 0],
		[557, 403, 0.463648],
		[559, 403, 0],
		[561, 403, 0],
		[563, 403, 0],
		[563, 403, 0],
		[563, 401, -1.5708],
		[561, 401, 3.14159],
		[559, 401, 3.14159],
		[557, 401, 3.14159],
		[555, 400, -2.67795],
		[553, 400, 3.14159],
		[551, 400, 3.14159],
		[549, 400, 3.14159],
		[547, 400, 3.14159],
		[545, 400, 3.14159],
		[543, 400, 3.14159],
		[541, 400, 3.14159],
		[539, 400, 3.14159],
		[537, 400, 3.14159],
		[535, 400, 3.14159],
		[533, 400, 3.14159],
		[531, 400, 3.14159],
		[529, 400, 3.14159],
		[527, 400, 3.14159],
		[525, 400, 3.14159],
		[523, 400, 3.14159],
		[521, 400, 3.14159],
		[519, 400, 3.14159],
		[517, 400, 3.14159],
		[515, 400, 3.14159],
		[513, 400, 3.14159],
		[511, 400, 3.14159],
		[509, 400, 3.14159],
		[507, 400, 3.14159],
		[505, 400, 3.14159],
		[503, 400, 3.14159],
		[501, 400, 3.14159],
		[499, 400, 3.14159],
		[497, 400, 3.14159],
		[495, 400, 3.14159],
		[493, 400, 3.14159],
		[491, 399, -2.67795],
		[489, 399, 3.14159],
		[487, 399, 3.14159],
		[485, 399, 3.14159],
		[483, 399, 3.14159],
		[481, 399, 3.14159],
		[479, 399, 3.14159],
		[477, 399, 3.14159],
		[475, 399, 3.14159],
		[473, 399, 3.14159],
		[471, 399, 3.14159],
		[469, 399, 3.14159],
		[467, 399, 3.14159],
		[465, 399, 3.14159],
		[463, 399, 3.14159],
		[461, 399, 3.14159],
		[459, 399, 3.14159],
		[457, 399, 3.14159],
		[455, 399, 3.14159],
		[453, 399, 3.14159],
		[451, 399, 3.14159],
		[449, 399, 3.14159],
		[447, 399, 3.14159],
		[445, 399, 3.14159],
		[443, 399, 3.14159],
		[441, 399, 3.14159],
		[439, 399, 3.14159],
		[437, 399, 3.14159],
		[435, 399, 3.14159],
		[433, 399, 3.14159],
		[431, 399, 3.14159],
		[429, 399, 3.14159],
		[427, 398, -2.67795],
		[425, 398, 3.14159],
		[425, 398, 0],
		[425, 396, -1.5708],
		[425, 394, -1.5708],
		[425, 392, -1.5708],
		[425, 390, -1.5708],
		[425, 390, 0],
		[427, 390, 0],
		[429, 391, 0.463648],
		[431, 391, 0],
		[433, 391, 0],
		[435, 391, 0],
		[437, 391, 0],
		[439, 391, 0],
		[441, 391, 0],
		[443, 391, 0],
		[445, 391, 0],
		[447, 391, 0],
		[449, 391, 0],
		[451, 391, 0],
		[453, 391, 0],
		[455, 391, 0],
		[457, 391, 0],
		[459, 391, 0],
		[461, 391, 0],
		[463, 391, 0],
		[465, 391, 0],
		[467, 391, 0],
		[469, 391, 0],
		[471, 391, 0],
		[473, 391, 0],
		[475, 391, 0],
		[477, 391, 0],
		[479, 391, 0],
		[481, 391, 0],
		[483, 391, 0],
		[485, 391, 0],
		[487, 391, 0],
		[489, 391, 0],
		[491, 391, 0],
		[493, 392, 0.463648],
		[495, 392, 0],
		[497, 392, 0],
		[499, 392, 0],
		[501, 392, 0],
		[503, 392, 0],
		[505, 392, 0],
		[507, 392, 0],
		[509, 392, 0],
		[511, 392, 0],
		[513, 392, 0],
		[515, 392, 0],
		[517, 392, 0],
		[519, 392, 0],
		[521, 392, 0],
		[523, 392, 0],
		[525, 392, 0],
		[527, 392, 0],
		[529, 392, 0],
		[531, 392, 0],
		[533, 392, 0],
		[535, 392, 0],
		[537, 392, 0],
		[539, 392, 0],
		[541, 392, 0],
		[543, 392, 0],
		[545, 392, 0],
		[547, 392, 0],
		[549, 392, 0],
		[551, 392, 0],
		[553, 392, 0],
		[555, 393, 0.463648],
		[557, 393, 0],
		[559, 393, 0],
		[561, 393, 0],
		[563, 393, 0],
		[563, 389, -1.5708],
		[563, 389, 0],
		[563, 387, -1.5708],
		[563, 385, -1.5708],
		[561, 385, 3.14159],
		[559, 385, 3.14159],
		[557, 385, 3.14159],
		[555, 385, 3.14159],
		[553, 384, -2.67795],
		[551, 384, 3.14159],
		[549, 384, 3.14159],
		[547, 384, 3.14159],
		[545, 384, 3.14159],
		[543, 384, 3.14159],
		[541, 384, 3.14159],
		[539, 384, 3.14159],
		[537, 384, 3.14159],
		[535, 384, 3.14159],
		[533, 384, 3.14159],
		[531, 384, 3.14159],
		[529, 384, 3.14159],
		[527, 384, 3.14159],
		[525, 384, 3.14159],
		[523, 384, 3.14159],
		[521, 384, 3.14159],
		[519, 384, 3.14159],
		[517, 384, 3.14159],
		[515, 384, 3.14159],
		[513, 384, 3.14159],
		[511, 384, 3.14159],
		[509, 384, 3.14159],
		[507, 384, 3.14159],
		[505, 384, 3.14159],
		[503, 384, 3.14159],
		[501, 384, 3.14159],
		[499, 384, 3.14159],
		[497, 384, 3.14159],
		[495, 384, 3.14159],
		[493, 384, 3.14159],
		[491, 383, -2.67795],
		[489, 383, 3.14159],
		[487, 383, 3.14159],
		[485, 383, 3.14159],
		[483, 383, 3.14159],
		[481, 383, 3.14159],
		[479, 383, 3.14159],
		[477, 383, 3.14159],
		[475, 383, 3.14159],
		[473, 383, 3.14159],
		[471, 383, 3.14159],
		[469, 383, 3.14159],
		[467, 383, 3.14159],
		[465, 383, 3.14159],
		[463, 383, 3.14159],
		[461, 383, 3.14159],
		[459, 383, 3.14159],
		[457, 383, 3.14159],
		[455, 383, 3.14159],
		[453, 383, 3.14159],
		[451, 383, 3.14159],
		[449, 383, 3.14159],
		[447, 383, 3.14159],
		[445, 383, 3.14159],
		[443, 383, 3.14159],
		[441, 383, 3.14159],
		[439, 383, 3.14159],
		[437, 383, 3.14159],
		[435, 383, 3.14159],
		[433, 383, 3.14159],
		[431, 383, 3.14159],
		[429, 383, 3.14159],
		[427, 382, -2.67795],
		[425, 382, 3.14159],
		[425, 382, 0],
		[425, 382, 0],
		[425, 374, -1.5708],
		[427, 374, 0],
		[429, 375, 0.463648],
		[431, 375, 0],
		[433, 375, 0],
		[435, 375, 0],
		[437, 375, 0],
		[439, 375, 0],
		[441, 375, 0],
		[443, 375, 0],
		[445, 375, 0],
		[447, 375, 0],
		[449, 375, 0],
		[451, 375, 0],
		[453, 375, 0],
		[455, 375, 0],
		[457, 375, 0],
		[459, 375, 0],
		[461, 375, 0],
		[463, 375, 0],
		[465, 375, 0],
		[467, 375, 0],
		[469, 375, 0],
		[471, 375, 0],
		[473, 375, 0],
		[475, 375, 0],
		[477, 375, 0],
		[479, 375, 0],
		[481, 375, 0],
		[483, 375, 0],
		[485, 375, 0],
		[487, 375, 0],
		[489, 375, 0],
		[491, 375, 0],
		[493, 376, 0.463648],
		[495, 376, 0],
		[497, 376, 0],
		[499, 376, 0],
		[501, 376, 0],
		[503, 376, 0],
		[505, 376, 0],
		[507, 376, 0],
		[509, 376, 0],
		[511, 376, 0],
		[513, 376, 0],
		[515, 376, 0],
		[517, 376, 0],
		[519, 376, 0],
		[521, 376, 0],
		[523, 376, 0],
		[525, 376, 0],
		[527, 376, 0],
		[529, 376, 0],
		[531, 376, 0],
		[533, 376, 0],
		[535, 376, 0],
		[537, 376, 0],
		[539, 376, 0],
		[541, 376, 0],
		[543, 376, 0],
		[545, 376, 0],
		[547, 376, 0],
		[549, 376, 0],
		[551, 376, 0],
		[553, 376, 0],
		[555, 377, 0.463648],
		[557, 377, 0],
		[559, 377, 0],
		[561, 377, 0],
		[563, 377, 0],
		[563, 377, 0],
		[563, 375, -1.5708],
		[563, 373, -1.5708],
		[563, 371, -1.5708],
		[563, 369, -1.5708],
		[563, 369, 0],
		[561, 369, 3.14159],
		[559, 369, 3.14159],
		[557, 369, 3.14159],
		[555, 369, 3.14159],
		[553, 368, -2.67795],
		[551, 368, 3.14159],
		[549, 368, 3.14159],
		[547, 368, 3.14159],
		[545, 368, 3.14159],
		[543, 368, 3.14159],
		[541, 368, 3.14159],
		[539, 368, 3.14159],
		[537, 368, 3.14159],
		[535, 368, 3.14159],
		[533, 368, 3.14159],
		[531, 368, 3.14159],
		[529, 368, 3.14159],
		[527, 368, 3.14159],
		[525, 368, 3.14159],
		[523, 368, 3.14159],
		[521, 368, 3.14159],
		[519, 368, 3.14159],
		[517, 368, 3.14159],
		[515, 368, 3.14159],
		[513, 368, 3.14159],
		[511, 368, 3.14159],
		[509, 368, 3.14159],
		[507, 368, 3.14159],
		[505, 368, 3.14159],
		[503, 368, 3.14159],
		[501, 368, 3.14159],
		[499, 368, 3.14159],
		[497, 368, 3.14159],
		[495, 368, 3.14159],
		[493, 368, 3.14159],
		[491, 367, -2.67795],
		[489, 367, 3.14159],
		[487, 367, 3.14159],
		[485, 367, 3.14159],
		[483, 367, 3.14159],
		[481, 367, 3.14159],
		[479, 367, 3.14159],
		[477, 367, 3.14159],
		[475, 367, 3.14159],
		[473, 367, 3.14159],
		[471, 367, 3.14159],
		[469, 367, 3.14159],
		[467, 367, 3.14159],
		[465, 367, 3.14159],
		[463, 367, 3.14159],
		[461, 367, 3.14159],
		[459, 367, 3.14159],
		[457, 367, 3.14159],
		[455, 367, 3.14159],
		[453, 367, 3.14159],
		[451, 367, 3.14159],
		[449, 367, 3.14159],
		[447, 367, 3.14159],
		[445, 367, 3.14159],
		[443, 367, 3.14159],
		[441, 367, 3.14159],
		[439, 367, 3.14159],
		[437, 367, 3.14159],
		[435, 367, 3.14159],
		[433, 367, 3.14159],
		[431, 367, 3.14159],
		[429, 367, 3.14159],
		[427, 366, -2.67795],
		[425, 366, 3.14159],
		[425, 366, 0],
		[415, 358, -2.46685],
		[417, 358, 0],
		[419, 358, 0],
		[421, 358, 0],
		[423, 358, 0],
		[425, 358, 0],
		[427, 358, 0],
		[429, 359, 0.463648],
		[431, 359, 0],
		[433, 359, 0],
		[435, 359, 0],
		[437, 359, 0],
		[439, 359, 0],
		[441, 359, 0],
		[443, 359, 0],
		[445, 359, 0],
		[447, 359, 0],
		[449, 359, 0],
		[451, 359, 0],
		[453, 359, 0],
		[455, 359, 0],
		[457, 359, 0],
		[459, 359, 0],
		[461, 359, 0],
		[463, 359, 0],
		[465, 359, 0],
		[467, 359, 0],
		[469, 359, 0],
		[471, 359, 0],
		[473, 359, 0],
		[475, 359, 0],
		[477, 359, 0],
		[479, 359, 0],
		[481, 359, 0],
		[483, 359, 0],
		[485, 359, 0],
		[487, 359, 0],
		[489, 359, 0],
		[491, 359, 0],
		[493, 360, 0.463648],
		[495, 360, 0],
		[497, 360, 0],
		[499, 360, 0],
		[501, 360, 0],
		[503, 360, 0],
		[505, 360, 0],
		[507, 360, 0],
		[509, 360, 0],
		[511, 360, 0],
		[513, 360, 0],
		[515, 360, 0],
		[517, 360, 0],
		[519, 360, 0],
		[521, 360, 0],
		[523, 360, 0],
		[525, 360, 0],
		[527, 360, 0],
		[529, 360, 0],
		[531, 360, 0],
		[533, 360, 0],
		[535, 360, 0],
		[537, 360, 0],
		[539, 360, 0],
		[541, 360, 0],
		[543, 360, 0],
		[545, 360, 0],
		[547, 360, 0],
		[549, 360, 0],
		[551, 360, 0],
		[553, 360, 0],
		[555, 361, 0.463648],
		[557, 361, 0],
		[559, 361, 0],
		[561, 361, 0],
		[563, 361, 0],
		[563, 363, 1.5708],
		[563, 363, 0],
		[563, 359, -1.5708],
		[561, 359, 3.14159],
		[559, 359, 3.14159],
		[557, 359, 3.14159],
		[555, 359, 3.14159],
		[553, 358, -2.67795],
		[551, 358, 3.14159],
		[549, 358, 3.14159],
		[547, 358, 3.14159],
		[545, 358, 3.14159],
		[543, 358, 3.14159],
		[541, 358, 3.14159],
		[539, 358, 3.14159],
		[537, 358, 3.14159],
		[535, 358, 3.14159],
		[533, 358, 3.14159],
		[531, 358, 3.14159],
		[529, 358, 3.14159],
		[527, 358, 3.14159],
		[525, 358, 3.14159],
		[523, 358, 3.14159],
		[521, 358, 3.14159],
		[519, 358, 3.14159],
		[517, 358, 3.14159],
		[515, 358, 3.14159],
		[513, 358, 3.14159],
		[511, 358, 3.14159],
		[509, 358, 3.14159],
		[507, 358, 3.14159],
		[505, 358, 3.14159],
		[503, 358, 3.14159],
		[501, 358, 3.14159],
		[499, 358, 3.14159],
		[497, 358, 3.14159],
		[495, 358, 3.14159],
		[493, 358, 3.14159],
		[491, 357, -2.67795],
		[489, 357, 3.14159],
		[487, 357, 3.14159],
		[485, 357, 3.14159],
		[483, 357, 3.14159],
		[481, 357, 3.14159],
		[479, 357, 3.14159],
		[477, 357, 3.14159],
		[475, 357, 3.14159],
		[473, 357, 3.14159],
		[471, 357, 3.14159],
		[470, 357, 3.14159],
		[468, 357, 3.14159],
		[466, 357, 3.14159],
		[464, 357, 3.14159],
		[462, 357, 3.14159],
		[460, 357, 3.14159],
		[458, 357, 3.14159],
		[456, 357, 3.14159],
		[454, 357, 3.14159],
		[452, 357, 3.14159],
		[450, 357, 3.14159],
		[448, 357, 3.14159],
		[446, 357, 3.14159],
		[444, 357, 3.14159],
		[442, 357, 3.14159],
		[440, 357, 3.14159],
		[438, 357, 3.14159],
		[436, 357, 3.14159],
		[434, 357, 3.14159],
		[432, 357, 3.14159],
		[430, 357, 3.14159],
		[428, 356, -2.67795],
		[426, 356, 3.14159],
		[424, 356, 3.14159],
		[422, 356, 3.14159],
		[420, 356, 3.14159],
		[418, 356, 3.14159],
		[416, 356, 3.14159],
		[414, 356, 3.14159],
		[414, 356, 0],
		[537, 408, 0.399975],
		[537, 410, 1.5708],
		[537, 412, 1.5708],
		[537, 414, 1.5708],
		[537, 416, 1.5708],
		[537, 418, 1.5708],
		[537, 420, 1.5708],
		[536, 422, 2.03444],
		[536, 424, 1.5708],
		[536, 426, 1.5708],
		[536, 428, 1.5708],
		[536, 430, 1.5708],
		[536, 432, 1.5708],
		[536, 434, 1.5708],
		[536, 436, 1.5708],
		[536, 438, 1.5708],
		[536, 440, 1.5708],
		[536, 442, 1.5708],
		[536, 444, 1.5708],
		[538, 444, 0],
		[538, 444, 0],
		[538, 442, -1.5708],
		[538, 440, -1.5708],
		[538, 438, -1.5708],
		[538, 436, -1.5708],
		[538, 434, -1.5708],
		[538, 432, -1.5708],
		[538, 430, -1.5708],
		[538, 428, -1.5708],
		[538, 426, -1.5708],
		[538, 424, -1.5708],
		[538, 422, -1.5708],
		[539, 420, -1.10715],
		[539, 418, -1.5708],
		[539, 416, -1.5708],
		[539, 414, -1.5708],
		[539, 412, -1.5708],
		[539, 410, -1.5708],
		[539, 408, -1.5708],
		[539, 406, -1.5708],
		[541, 406, 0],
		[543, 406, 0],
		[545, 406, 0],
		[547, 406, 0],
		[547, 406, 0],
		[547, 408, 1.5708],
		[547, 410, 1.5708],
		[547, 412, 1.5708],
		[547, 414, 1.5708],
		[547, 416, 1.5708],
		[547, 418, 1.5708],
		[547, 420, 1.5708],
		[546, 422, 2.03444],
		[546, 424, 1.5708],
		[546, 426, 1.5708],
		[546, 428, 1.5708],
		[546, 430, 1.5708],
		[546, 432, 1.5708],
		[546, 434, 1.5708],
		[546, 436, 1.5708],
		[546, 438, 1.5708],
		[546, 440, 1.5708],
		[546, 442, 1.5708],
		[546, 444, 1.5708],
		[548, 444, 0],
		[550, 444, 0],
		[552, 444, 0],
		[554, 444, 0],
		[554, 444, 0],
		[554, 442, -1.5708],
		[554, 440, -1.5708],
		[554, 438, -1.5708],
		[554, 436, -1.5708],
		[554, 434, -1.5708],
		[554, 432, -1.5708],
		[554, 430, -1.5708],
		[554, 428, -1.5708],
		[554, 426, -1.5708],
		[554, 424, -1.5708],
		[554, 422, -1.5708],
		[555, 420, -1.10715],
		[555, 418, -1.5708],
		[555, 416, -1.5708],
		[555, 414, -1.5708],
		[555, 412, -1.5708],
		[555, 410, -1.5708],
		[555, 408, -1.5708],
		[555, 406, -1.5708],
		[557, 407, 0.463648],
		[559, 407, 0],
		[561, 407, 0],
		[563, 407, 0],
		[563, 407, 0],
		[563, 409, 1.5708],
		[563, 411, 1.5708],
		[561, 413, 2.35619],
		[561, 415, 1.5708],
		[561, 417, 1.5708],
		[561, 419, 1.5708],
		[561, 421, 1.5708],
		[560, 423, 2.03444],
		[562, 425, 0.785398],
		[562, 427, 1.5708],
		[562, 429, 1.5708],
		[562, 431, 1.5708],
		[562, 433, 1.5708],
		[562, 435, 1.5708],
		[562, 437, 1.5708],
		[562, 439, 1.5708],
		[562, 441, 1.5708],
		[562, 443, 1.5708],
		[562, 445, 1.5708],
		[559, 487, 1.6421],
		[525, 486, -3.11219],
		[523, 486, 3.14159],
		[521, 486, 3.14159],
		[519, 486, 3.14159],
		[517, 486, 3.14159],
		[515, 486, 3.14159],
		[513, 486, 3.14159],
		[511, 486, 3.14159],
		[509, 486, 3.14159],
		[507, 486, 3.14159],
		[505, 486, 3.14159],
		[503, 486, 3.14159],
		[501, 486, 3.14159],
		[499, 486, 3.14159],
		[497, 486, 3.14159],
		[495, 486, 3.14159],
		[494, 484, -2.03444],
		[494, 484, 0]]
	
	rospy.init_node('exploration_node')
	move_base_path_goal = MoveBasePathGoal()
	#move_base_path_goal.target_poses = exploration_result.coverage_path_pose_stamped
	move_base_path_goal.path_tolerance = 0.2 #0.1
	move_base_path_goal.goal_position_tolerance = 0.5 #0.25 #0.1
	move_base_path_goal.goal_angle_tolerance = 3.15 #0.7 #0.087

	
	for i in range(0, len(poses)):
		if i%2==0:
			goal_pose = PoseStamped()
			goal_pose.pose.position.x = poses[i%len(poses)][0]*0.05
			goal_pose.pose.position.y = (768-poses[i%len(poses)][1])*0.05
			angle = poses[i%len(poses)][2]
			quaternion = tf.transformations.quaternion_from_euler(angle, 0., 0., 'rzyx')#1.57)
			goal_pose.pose.orientation.x = quaternion[0]
			goal_pose.pose.orientation.y = quaternion[1]
			goal_pose.pose.orientation.z = quaternion[2]
			goal_pose.pose.orientation.w = quaternion[3]
			#goal_pose.header
			move_base_path_goal.target_poses.append(goal_pose)

	print "Waiting for action 'move_base_path' to become available ..."
	move_base_path = actionlib.SimpleActionClient('/move_base_path', MoveBasePathAction)
	move_base_path.wait_for_server()
	print "Sending goal ..."
	move_base_path.send_goal(move_base_path_goal)
	move_base_path.wait_for_result()
	print move_base_path.get_result()


if __name__ == '__main__':
	try:
		#simple_move()
		move_path()
	except rospy.ROSInterruptException:
		print "Keyboard Interrupt"
